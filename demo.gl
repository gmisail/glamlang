let x : int = 100
let y : bool = false
let z : string = "hello world"
let PI : float = 3.14

let is_pi_greater : bool = PI < 0.32
let invalid_comp : bool = PI * 10

let age : int
let g : bool
let e : string

let TEST : float = PI

let ANOTHER_TEST : string = NONEXISTENT

let name : string = "graham misail"
let middle_name : string?

let map : (list, (element) -> element) -> list

{
	let i : int = 10000
	let j : float = 10.0
}

{
    let test : int = 100
    let sum : int = test + 100
}

if age >= 21 { 
    let can_drink : bool = true
}

let can_drink : bool = age >= 21

if name == "graham" and age == 10 {

} else {

}

if middle_name {

} else if mult {

} else {

}

while age < 21 {
    let can_drink : bool = false
}

let div : (int, int) -> int = fun(x, y) => x / y
let mult : (int, int) -> int = fun(x, y) => x * y
func mult(): string {
	return (x: int, y: int) => {

	}
}

struct Album {
    name: string,
    artist: string
}

let is_artist: (string, Album) -> bool = fun(artist, album) => {
    artist
}

is_artist("hello", 123, true, nested_function("value"))

let identity: ((string) -> string) -> (string) -> string = fun(callback) => {
	callback	
}

identity(fun(val) => {
	print(val)
})()
