let sum : (int, int) -> int = fun(bugs:int, bunny:int): int => {
	return bugs + bunny
}

struct Account {
	balance: float
	name: string
	is_overdrawn: bool
	linked_account: Account
}

let create_bank : () -> Bank = fun(): Bank => {
	return 0
}

let bank : Bank = create_bank()

let mul : (int, int) -> int = fun(bugs:int, bunny:int): int => {
	if bugs == 0 {
        while true {
            if 0 == 0 {
                return 10
            } else if 10 == 10 {
                let z : int = 5
                let y : int = 1

                return z * y 
            }

            sum(10, 10)

            return 0
        }
    }

    if bugs == 0 {
        return 100 
    }

    if bugs == 0
        return 0

	return bugs * bunny
}
